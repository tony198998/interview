前端：
1、缓存静态资源和文件，利用nginx和CDN（内容分发服务器，会将源目标服务器的资源缓存到离用户最近的一台服务器上）
2、防流量：一个用户点击了按钮了，过一段时间才能点击
         秒杀开始前，用户不能点击按钮，按钮置灰

后端：
1、秒杀单独做微服务，单独数据库，避免因为秒杀服务异常影响其他的业务
2、限流，数据校验
3、url加盐处理，即使url暴露，用户也无法使用
4、redis预热数据，lua脚本来减库存
5、写数据库，可放在MQ中异步处理


redis：
读写分离，哨兵机制，集群分片部署，开启持久化日志AOF，RDB
一个系统可以有多个redis集群

mysql：
建立合适的索引，看业务是否有优化的地方，减少回表操作
mysql也应该读写分离。分库分表（ShardingSphere）根据具体的业务来设计

Nginx：
动静分离，限流操作，令牌桶都可以支持,还可以支持负载均衡，将请求打到不同的服务器上，降低单台服务器的压力

热点数据和普通数据分离：
热点数据单独放一个库中
